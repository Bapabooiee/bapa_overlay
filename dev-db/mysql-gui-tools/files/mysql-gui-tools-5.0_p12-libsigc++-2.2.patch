--- old/mysql-administrator/source/linux/MABackupPanel.cc
+++ new/mysql-administrator/source/linux/MABackupPanel.cc
@@ -1282,7 +1282,7 @@
 
   if (_inst->check_connection())
   {
-    SigC::Connection con= Glib::signal_timeout().connect(sigc::bind<void*>
+    sigc::connection con= Glib::signal_timeout().connect(sigc::bind<void*>
                                                          (sigc::mem_fun(*this, &MABackupPanel::update_backup_progress),&arg.pdata),
                                                          50);
     dlg->show();
--- old/mysql-administrator/source/linux/MACatalogsPanel.cc
+++ new/mysql-administrator/source/linux/MACatalogsPanel.cc
@@ -1488,7 +1488,7 @@
 
       _maint_dlg_xml->get_button("next_button")->set_sensitive(false);
       _maint_dlg_xml->get_note("note")->set_current_page(4);
-      SigC::Connection conn = Glib::signal_timeout().connect(sigc::mem_fun(*this, &MACatalogsPanel::maint_pulse_progressbar), 200);
+      sigc::connection conn = Glib::signal_timeout().connect(sigc::mem_fun(*this, &MACatalogsPanel::maint_pulse_progressbar), 200);
 
       status= (MYX_TABLE_COMMAND_STATUSES*)
         _data->get_instance()->perform_data_fetch3((MInstanceInfo::DataFetcher3)myx_optimize_table,
@@ -1528,7 +1528,7 @@
 
       _maint_dlg_xml->get_button("next_button")->set_sensitive(false);
       _maint_dlg_xml->get_note("note")->set_current_page(4);      
-      SigC::Connection conn = Glib::signal_timeout().connect(sigc::mem_fun(*this, &MACatalogsPanel::maint_pulse_progressbar), 200);
+      sigc::connection conn = Glib::signal_timeout().connect(sigc::mem_fun(*this, &MACatalogsPanel::maint_pulse_progressbar), 200);
 
       status= (MYX_TABLE_COMMAND_STATUSES*)
         _data->get_instance()->perform_data_fetch3((MInstanceInfo::DataFetcher3)myx_check_table,
@@ -1568,7 +1568,7 @@
 
       _maint_dlg_xml->get_button("next_button")->set_sensitive(false);
       _maint_dlg_xml->get_note("note")->set_current_page(4);
-      SigC::Connection conn = Glib::signal_timeout().connect(sigc::mem_fun(*this, &MACatalogsPanel::maint_pulse_progressbar), 200);
+      sigc::connection conn = Glib::signal_timeout().connect(sigc::mem_fun(*this, &MACatalogsPanel::maint_pulse_progressbar), 200);
 
       status= (MYX_TABLE_COMMAND_STATUSES*)
         _data->get_instance()->perform_data_fetch3((MInstanceInfo::DataFetcher3)myx_repair_table,
--- old/mysql-administrator/source/linux/MAdministrator.h
+++ new/mysql-administrator/source/linux/MAdministrator.h
@@ -66,7 +66,7 @@
 
     sigc::signal0<void> _signal_prefs_changed;
     
-    SigC::Connection _pulse_conn;
+    sigc::connection _pulse_conn;
     bool pulse_progress();
     
     void setup_sidebar();
--- old/mysql-administrator/source/linux/MARestorePanel.cc
+++ new/mysql-administrator/source/linux/MARestorePanel.cc
@@ -728,7 +728,7 @@
   op_aborted= false;
 
   {
-    SigC::Connection con= Glib::signal_timeout().connect(sigc::bind<void*>
+    sigc::connection con= Glib::signal_timeout().connect(sigc::bind<void*>
                                                          (sigc::mem_fun(*this, &MARestorePanel::update_status),&arg.pdata),
                                                          50);
 
@@ -854,7 +854,7 @@
   //{
     MYX_BACKUP_ERROR err;
 
-    SigC::Connection con= Glib::signal_timeout().connect(sigc::bind<void*>
+    sigc::connection con= Glib::signal_timeout().connect(sigc::bind<void*>
                                                          (sigc::mem_fun(*this, &MARestorePanel::update_status),&arg.pdata),
                                                          50);
 
--- old/mysql-administrator/source/linux/MAServerConnectionsPanel.h
+++ new/mysql-administrator/source/linux/MAServerConnectionsPanel.h
@@ -87,7 +87,7 @@
 
     Glib::RefPtr<Gdk::Pixbuf> _thread_icon;
 
-    SigC::Connection _timer;
+    sigc::connection _timer;
     
     int _current_page;
 
Only in new/mysql-gui-common/library/sql-parser/source: sed885efK
--- old/mysql-gui-common/source/linux/MGConnectDialog.cc
+++ new/mysql-gui-common/source/linux/MGConnectDialog.cc
@@ -659,9 +659,9 @@
   // select back the original item
   ((Gtk::OptionMenu*)_xml->get_widget("connection_list"))->set_history(_current_selected_item);
 
-  SigC::Connection c1= MGPreferencesEditor::instance()->signal_closed().connect(sigc::mem_fun(*this,
+  sigc::connection c1= MGPreferencesEditor::instance()->signal_closed().connect(sigc::mem_fun(*this,
                                                                                            &MGConnectDialog::preferences_closed));
-  SigC::Connection c2= MGPreferencesEditor::instance()->signal_changed().connect(sigc::mem_fun(*this,
+  sigc::connection c2= MGPreferencesEditor::instance()->signal_changed().connect(sigc::mem_fun(*this,
                                                                                             &MGConnectDialog::preferences_changed));
   MGPreferencesEditor::instance()->show(true);
   MGPreferencesEditor::instance()->set_modal(true);
@@ -676,7 +676,7 @@
 {
   Gtk::Button *btn;
   pid_t ping_pid= 0;
-  SigC::Connection input_handler;
+  sigc::connection input_handler;
   int rc;
   bool pinging= false;
   int myerror= 0;
--- old/mysql-gui-common/source/linux/MGTreeTooltip.h
+++ new/mysql-gui-common/source/linux/MGTreeTooltip.h
@@ -39,7 +39,7 @@
     
     WillShowSignal _show_signal;
     
-    SigC::Connection _timeout;
+    sigc::connection _timeout;
 
     void expose_event(GdkEventExpose *event);
     void leave_event(GdkEventCrossing *event);
--- old/mysql-migration-tool/source/linux/GRTEnvironment.cc
+++ new/mysql-migration-tool/source/linux/GRTEnvironment.cc
@@ -76,7 +76,7 @@
 }
 
 
-void GRTEnvironment::set_shell_output_handler(const SigC::Slot1<void,const Glib::ustring&> &slot)
+void GRTEnvironment::set_shell_output_handler(const sigc::slot1<void,const Glib::ustring&> &slot)
 {
   _shellOutputHandler= slot;
 
--- old/mysql-migration-tool/source/linux/GRTEnvironment.h
+++ new/mysql-migration-tool/source/linux/GRTEnvironment.h
@@ -28,7 +28,7 @@
     int _msgOffset;
     std::vector<Glib::ustring> _sourceObjectNames;
 
-    SigC::Slot1<void,const Glib::ustring&> _shellOutputHandler;
+    sigc::slot1<void,const Glib::ustring&> _shellOutputHandler;
     
     static void process_shell_output(const char *text, void *udata);
         
@@ -42,7 +42,7 @@
     int init_jni(const std::string &classpath);
     int execute_shell_command(const Glib::ustring &command);
 
-    void set_shell_output_handler(const SigC::Slot1<void,const Glib::ustring&> &slot);
+    void set_shell_output_handler(const sigc::slot1<void,const Glib::ustring&> &slot);
 
     MYX_GRT_OBJ *get_object(const Glib::ustring &name);
     bool object_implements_interface(MYX_GRT_OBJ *obj, const Glib::ustring &name);
--- old/mysql-migration-tool/source/linux/ObjectShell.cc
+++ new/mysql-migration-tool/source/linux/ObjectShell.cc
@@ -45,7 +45,7 @@
 
   tree->set_model(_otree);
   
-  tree->get_selection()->signal_changed().connect(SigC::slot(*this,&ObjectShell::object_selected));
+  tree->get_selection()->signal_changed().connect(sigc::slot(*this,&ObjectShell::object_selected));
   
   
   tree= _xml->get_tree("inspector_tree");
@@ -57,9 +57,9 @@
 
   tree->set_model(_ilist);
 
-  _xml->get_text("shell_text")->signal_key_press_event().connect(SigC::slot(*this,&ObjectShell::shell_key_press), false);
+  _xml->get_text("shell_text")->signal_key_press_event().connect(sigc::slot(*this,&ObjectShell::shell_key_press), false);
   
-  env->set_shell_output_handler(SigC::slot(*this,&ObjectShell::print_shell));
+  env->set_shell_output_handler(sigc::slot(*this,&ObjectShell::print_shell));
   
   put_prompt();
 }
--- old/mysql-query-browser/source/linux/MQResultTab.h
+++ new/mysql-query-browser/source/linux/MQResultTab.h
@@ -45,7 +45,7 @@
 
       Gtk::Paned *paned;
 
-      SigC::Connection scroll_con;
+      sigc::connection scroll_con;
     };
     
     enum CompareAction {
@@ -71,7 +71,7 @@
 
     bool _vertical;
 
-    SigC::Connection _sync_con1, _sync_con2;
+    sigc::connection _sync_con1, _sync_con2;
 
     void scrolled(MQResultSetView *sender);
     void activated(MQResultSetView *sender);
